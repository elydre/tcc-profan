/*  tccdefs.h (converted, do not edit this file)

    Nothing is defined before this file except target machine, target os
    and the few things related to option settings in tccpp.c:tcc_predefs().

    This file is either included at runtime as is, or converted and
    included as C-strings at compile-time (depending on CONFIG_TCC_PREDEFS).

    Note that line indent matters:

    - in lines starting at column 1, platform macros are replaced by
      corresponding TCC target compile-time macros.  See conftest.c for
      the list of platform macros supported in lines starting at column 1.

    - only lines indented >= 4 are actually included into the executable,
      check tccdefs_.h.
*/

    /* 32bit systems. */
    "#define __SIZE_TYPE__ unsigned long\n"
    "#define __PTRDIFF_TYPE__ long\n"
    "#define __ILP32__ 1\n"
    "#define __INT64_TYPE__ long long\n"
    "#define __SIZEOF_INT__ 4\n"
    "#define __INT_MAX__ 0x7fffffff\n"
    "#define __LONG_MAX__ 0x7fffffffL\n"
    "#define __SIZEOF_LONG_LONG__ 8\n"
    "#define __LONG_LONG_MAX__ 0x7fffffffffffffffLL\n"
    "#define __CHAR_BIT__ 8\n"
    "#define __ORDER_LITTLE_ENDIAN__ 1234\n"
    "#define __ORDER_BIG_ENDIAN__ 4321\n"
    "#define __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__\n"
    "#define __WCHAR_TYPE__ int\n"
    "#define __WINT_TYPE__ unsigned int\n"
    "#if __STDC_VERSION__==201112L\n"
    "#define __STDC_NO_ATOMICS__ 1\n"
    "#define __STDC_NO_COMPLEX__ 1\n"
    "#define __STDC_NO_THREADS__ 1\n"
    "#define __STDC_UTF_16__ 1\n"
    "#define __STDC_UTF_32__ 1\n"
    "#endif\n"
    /* Some derived integer types needed to get stdint.h to compile correctly on some platforms */
    "#define __INT8_TYPE__  signed char\n"
    "#define __INT16_TYPE__ short\n"
    "#define __INT32_TYPE__ int\n"
    "#define __UINT8_TYPE__  unsigned char\n"
    "#define __UINT16_TYPE__ unsigned short\n"
    "#define __UINT32_TYPE__ unsigned int\n"
    "#define __INT_LEAST8_TYPE__  signed char\n"
    "#define __INT_LEAST16_TYPE__ short\n"
    "#define __INT_LEAST32_TYPE__ int\n"
    "#define __UINT_LEAST8_TYPE__  unsigned char\n"
    "#define __UINT_LEAST16_TYPE__ unsigned short\n"
    "#define __UINT_LEAST32_TYPE__ unsigned int\n"
    "#define __INT_FAST8_TYPE__  signed char\n"
    "#define __INT_FAST16_TYPE__ short\n"
    "#define __INT_FAST32_TYPE__ int\n"
    "#define __UINT_FAST8_TYPE__  unsigned char\n"
    "#define __UINT_FAST16_TYPE__ unsigned short\n"
    "#define __UINT_FAST32_TYPE__ unsigned int\n"
    "#define __UINT64_TYPE__ unsigned __INT64_TYPE__\n"
    "#define __UINT_LEAST64_TYPE__ __UINT64_TYPE__\n"
    "#define __UINT_FAST64_TYPE__ __UINT64_TYPE__\n"
    "#define __INT_LEAST64_TYPE__ __INT64_TYPE__\n"
    "#define __INT_FAST64_TYPE__ __INT64_TYPE__\n"
    "#define __UINTPTR_TYPE__ __UINT32_TYPE__\n"
    "#define __INTPTR_TYPE__ __INT32_TYPE__\n"
    "#define __UINTMAX_TYPE__ __UINT64_TYPE__\n"
    "#define __INTMAX_TYPE__ __INT64_TYPE__\n"
    "#define __INT8_MAX__ (0x7F)\n"
    "#define __INT16_MAX__ (0x7FFF)\n"
    "#define __INT32_MAX__ (0x7FFFFFFFL)\n"
    "#define __INT64_MAX__ (0x7FFFFFFFFFFFFFFFLL)\n"
    "#define __UINT8_MAX__ (0xFF)\n"
    "#define __UINT16_MAX__ (0xFFFF)\n"
    "#define __UINT32_MAX__ (0xFFFFFFFFL)\n"
    "#define __UINT64_MAX__ (0xFFFFFFFFFFFFFFFFLL)\n"
    "#define __INT_LEAST8_MAX__ (0x7F)\n"
    "#define __INT_LEAST16_MAX__ (0x7FFF)\n"
    "#define __INT_LEAST32_MAX__ (0x7FFFFFFFL)\n"
    "#define __INT_LEAST64_MAX__ (0x7FFFFFFFFFFFFFFFLL)\n"
    "#define __UINT_LEAST8_MAX__ (0xFF)\n"
    "#define __UINT_LEAST16_MAX__ (0xFFFF)\n"
    "#define __UINT_LEAST32_MAX__ (0xFFFFFFFFL)\n"
    "#define __UINT_LEAST64_MAX__ (0xFFFFFFFFFFFFFFFFLL)\n"
    "#define __INT_FAST8_MAX__ (0x7F)\n"
    "#define __INT_FAST16_MAX__ (0x7FFF)\n"
    "#define __INT_FAST32_MAX__ (0x7FFFFFFFL)\n"
    "#define __INT_FAST64_MAX__ (0x7FFFFFFFFFFFFFFFLL)\n"
    "#define __UINT_FAST8_MAX__ (0xFF)\n"
    "#define __UINT_FAST16_MAX__ (0xFFFF)\n"
    "#define __UINT_FAST32_MAX__ (0xFFFFFFFFL)\n"
    "#define __UINT_FAST64_MAX__ (0xFFFFFFFFFFFFFFFFLL)\n"
    "#define __UINTPTR_MAX__ __UINT32_MAX__\n"
    "#define __INTPTR_MAX__ __INT32_MAX__\n"
    "#define __UINTMAX_MAX__ __UINT64_MAX__\n"
    "#define __INTMAX_MAX__ __INT64_MAX__\n"
    "#define __PTRDIFF_MAX__ __INT32_MAX__\n"
    "#define __SIZE_MAX__ __UINT32_MAX__\n"
    "#define __WCHAR_MAX__ __UINT32_MAX__\n"
    "#define __WINT_MAX__ __UINT32_MAX__\n"
    /* glibc defines */
    "#define __REDIRECT(name,proto,alias) name proto __asm__(#alias)\n"
    "#define __REDIRECT_NTH(name,proto,alias) name proto __asm__(#alias)__THROW\n"
    /* skip __builtin... with -E */
    "#ifndef __TCC_PP__\n"
    "#define __builtin_offsetof(type,field) ((__SIZE_TYPE__)&((type*)0)->field)\n"
    "#define __builtin_extract_return_addr(x) x\n"
    /* __builtin_va_list */
    "typedef char*__builtin_va_list;\n"
    "#define __builtin_va_start(ap,last) (ap=((char*)&(last))+((sizeof(last)+3)&~3))\n"
    "#define __builtin_va_arg(ap,t) (*(t*)((ap+=(sizeof(t)+3)&~3)-((sizeof(t)+3)&~3)))\n"
    "#define __builtin_va_end(ap) (void)(ap)\n"
    "#ifndef __builtin_va_copy\n"
    "#define __builtin_va_copy(dest,src) (dest)=(src)\n"
    "#endif\n"

    /* TCC BBUILTIN AND BOUNDS ALIASES */
    "#ifdef __leading_underscore\n"
    "#define __RENAME(X) __asm__(\"_\"X)\n"
    "#else\n"
    "#define __RENAME(X) __asm__(X)\n"
    "#endif\n"

    "#ifdef __BOUNDS_CHECKING_ON\n"
    "#define __BUILTINBC(ret,name,params) ret __builtin_##name params __RENAME(\"__bound_\"#name);\n"
    "#define __BOUND(ret,name,params) ret name params __RENAME(\"__bound_\"#name);\n"
    "#else\n"
    "#define __BUILTINBC(ret,name,params) ret __builtin_##name params __RENAME(#name);\n"
    "#define __BOUND(ret,name,params)\n"
    "#endif\n"
    
    "#define __BOTH(ret,name,params) __BUILTINBC(ret,name,params)__BOUND(ret,name,params)\n"
    "#define __BUILTIN(ret,name,params) ret __builtin_##name params __RENAME(#name);\n"

    "__BOTH(void*,memcpy,(void*,const void*,__SIZE_TYPE__))\n"
    "__BOTH(void*,memmove,(void*,const void*,__SIZE_TYPE__))\n"
    "__BOTH(void*,memset,(void*,int,__SIZE_TYPE__))\n"
    "__BOTH(int,memcmp,(const void*,const void*,__SIZE_TYPE__))\n"
    "__BOTH(__SIZE_TYPE__,strlen,(const char*))\n"
    "__BOTH(char*,strcpy,(char*,const char*))\n"
    "__BOTH(char*,strncpy,(char*,const char*,__SIZE_TYPE__))\n"
    "__BOTH(int,strcmp,(const char*,const char*))\n"
    "__BOTH(int,strncmp,(const char*,const char*,__SIZE_TYPE__))\n"
    "__BOTH(char*,strcat,(char*,const char*))\n"
    "__BOTH(char*,strncat,(char*,const char*,__SIZE_TYPE__))\n"
    "__BOTH(char*,strchr,(const char*,int))\n"
    "__BOTH(char*,strrchr,(const char*,int))\n"
    "__BOTH(char*,strdup,(const char*))\n"

    "#define __MAYBE_REDIR __BUILTIN\n"
    "__MAYBE_REDIR(void*,malloc,(__SIZE_TYPE__))\n"
    "__MAYBE_REDIR(void*,realloc,(void*,__SIZE_TYPE__))\n"
    "__MAYBE_REDIR(void*,calloc,(__SIZE_TYPE__,__SIZE_TYPE__))\n"
    "__MAYBE_REDIR(void*,memalign,(__SIZE_TYPE__,__SIZE_TYPE__))\n"
    "__MAYBE_REDIR(void,free,(void*))\n"
    "__BOTH(void*,alloca,(__SIZE_TYPE__))\n"
    "__BUILTIN(void,abort,(void))\n"
    "__BOUND(void,longjmp,())\n"
    "#undef __BUILTINBC\n"
    "#undef __BUILTIN\n"
    "#undef __BOUND\n"
    "#undef __BOTH\n"
    "#undef __MAYBE_REDIR\n"
    "#undef __RENAME\n"

    "#define __BUILTIN_EXTERN(name,u) int __builtin_##name(u int);int __builtin_##name##l(u long);int __builtin_##name##ll(u long long);\n"
    
    "__BUILTIN_EXTERN(ffs,)\n"
    "__BUILTIN_EXTERN(clz,unsigned)\n"
    "__BUILTIN_EXTERN(ctz,unsigned)\n"
    "__BUILTIN_EXTERN(clrsb,)\n"
    "__BUILTIN_EXTERN(popcount,unsigned)\n"
    "__BUILTIN_EXTERN(parity,unsigned)\n"
    "#undef __BUILTIN_EXTERN\n"

    "#endif\n" /* ndef __TCC_PP__ */
